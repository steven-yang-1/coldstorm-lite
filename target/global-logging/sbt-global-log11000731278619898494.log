[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 16.0.1)
[debug]       Load.loadUnit: plugins took 78.1293ms
[debug]       Load.loadUnit: defsScala took 0.6949ms
[debug] [Loading] Scanning directory C:\Users\steve\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\steve\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.6471 ms
[debug]           Load.resolveProject(global-plugins) took 36.8587ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\steve\.sbt\1.0\plugins, plugins: List(<none>))) took 80.3938ms
[debug] [Loading] Done in C:\Users\steve\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 114.9614ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2762ms
[debug]     Load.loadUnit(file:/C:/Users/steve/.sbt/1.0/plugins/, ...) took 211.087ms
[debug]   Load.apply: load took 336.6641ms
[debug]   Load.apply: resolveProjects took 3.8045ms
[debug]   Load.apply: finalTransforms took 38.3552ms
[debug]   Load.apply: config.delegates took 5.0202ms
[debug]   Load.apply: Def.make(settings)... took 264.0603ms
[debug]   Load.apply: structureIndex took 70.0685ms
[debug]   Load.apply: mkStreams took 1.4081ms
[info] loading global plugins from C:\Users\steve\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1744.7061ms
[debug]           Load.loadUnit: plugins took 25.8085ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory D:\COLDSTORM\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\COLDSTORM\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2634 ms
[debug]               Load.resolveProject(coldstorm-build) took 0.9338ms
[debug]             Load.loadTransitive: finalizeProject(Project(id coldstorm-build, base: D:\COLDSTORM\project, plugins: List(<none>))) took 2.663ms
[debug] [Loading] Done in D:\COLDSTORM\project, returning: (coldstorm-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4.2453ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0111ms
[debug]         Load.loadUnit(file:/D:/COLDSTORM/project/, ...) took 30.5673ms
[debug]       Load.apply: load took 31.8072ms
[debug]       Load.apply: resolveProjects took 0.12ms
[debug]       Load.apply: finalTransforms took 7.6424ms
[debug]       Load.apply: config.delegates took 0.2827ms
[debug]       Load.apply: Def.make(settings)... took 68.1506ms
[debug]       Load.apply: structureIndex took 30.6389ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from D:\COLDSTORM\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 273.2135ms
[debug]     Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory D:\COLDSTORM
[debug]       Load.loadUnit: mkEval took 3.4284ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\COLDSTORM, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.0542 ms
[info] loading settings for project coldstorm from build.sbt ...
[debug]         Load.resolveProject(coldstorm) took 2.3667ms
[debug]       Load.loadTransitive: finalizeProject(Project(id coldstorm, base: D:\COLDSTORM, plugins: List(<none>))) took 3.8377ms
[debug] [Loading] Done in D:\COLDSTORM, returning: (coldstorm)
[debug]     Load.loadUnit: loadedProjectsRaw took 100.5709ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.0101ms
[debug]   Load.loadUnit(file:/D:/COLDSTORM/, ...) took 381.3712ms
[debug] Load.apply: load took 383.3897ms
[debug] Load.apply: resolveProjects took 0.271ms
[debug] Load.apply: finalTransforms took 7.7876ms
[debug] Load.apply: config.delegates took 0.3063ms
[debug] Load.apply: Def.make(settings)... took 49.7712ms
[debug] Load.apply: structureIndex took 19.685ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to COLDSTORM (in build file:/D:/COLDSTORM/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[error] server failed to start on local:sbt-server-96705f443b658ef80996. java.io.IOException: Could not create lock for \\.\pipe\sbt-server-96705f443b658ef80996_lock, error 5
